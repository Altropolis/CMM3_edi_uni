#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Dec 10 09:35:08 2023

@author: alfie
"""

import numpy as np
import sympy as sp
from sympy import Symbol, diff, simplify, sqrt, solve

# 3a)
'''def secant(f,a,b,N):
    if f(a)*f(b) >= 0:
        print("Secant method fails.")
        return None
    a_n = a
    b_n = b
    for n in range(1,N+1):
        m_n = a_n - f(a_n)*(b_n - a_n)/(f(b_n) - f(a_n))
        f_m_n = f(m_n)
        if f(a_n)*f_m_n < 0:
            a_n = a_n
            b_n = m_n
        elif f(b_n)*f_m_n < 0:
            a_n = m_n
            b_n = b_n
        elif f_m_n == 0:
            print("Found exact solution.")
        
            return m_n
        else:
            print("Secant method fails.")
            return None
    return a_n - f(a_n)*(b_n - a_n)/(f(b_n) - f(a_n))

f = lambda x: 1/(np.sin(x)) + 1/4
solution = secant(f,0.01,0.08,25)
print(solution)
'''
# 4a)

x = Symbol('x')
t =  Symbol('t')
m = Symbol('m')
b = Symbol('b')
k = Symbol('k')
dxdt = Symbol('dxdt')
d2xdt2 = Symbol('d2xdt2')
A0 = Symbol('A0')
w0 = Symbol('w0')
phi = Symbol('phi')
w = Symbol('w')
ODES = Symbol('ODES')

w = sqrt(w0**2 - ((b**2/(2*m)**2)))

k = w0**2 * m

x = A0*sp.exp(-(b*t/(2*m))) * sp.cos(w*t + phi)

dxdt = diff(x, t)

d2xdt2 = diff(dxdt, t)

ODES = m*d2xdt2 + b*dxdt + k*x


#print(simplify(ODES))


if simplify(ODES) == 0:
    print('Equation Q4.2 is the general integral solution of Equation Q4.1')
    
else:
    print('Equation Q4.2 is not the general integral solution of Equation Q4.1')
    
# 4b)

b = (-k*x - m*d2xdt2)/(dxdt)


# 4c)
x_1 = Symbol('x_1')
t_1 = Symbol('t_1')
m = 1
b = 0.1
w_0 = 5/np.pi * 180
phi = 0
x_1 = 0.1


w =  np.sqrt((w_0)**2 - (0.1/(2*1))**2)
print(w)

x_1 = solve(0.1 - sp.exp((-0.1*t_1)/2) * sp.cos(w*t_1), t_1)

print(x_1)